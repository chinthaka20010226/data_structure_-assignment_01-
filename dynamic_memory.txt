----------> malloc()

#include <stdio.h>
#include <stdlib.h>

int main(){
    int n,*A;
    printf("No.of elements: ");
    scanf("%d", &n);
    
    A = (int *)malloc(n * sizeof(int)); //malloc syntax
    
    for(int i = 0;i < n;i++){
        A[i] = i;
    }
    // free(A);
    
    for(int i = 0;i < n;i++){
        printf("%d\n", A[i]);
    }
    
    return 0;
}

-----------> calloc()

#include <stdio.h>
#include <stdlib.h>

int main(){
    int n,*A;
    printf("No.of elements: ");
    scanf("%d", &n);
    
    A = (int *)calloc(n , sizeof(int)); //calloc syntax
    
    for(int i = 0;i < n;i++){
        A[i] = i;
    }
    // free(A);
    
    for(int i = 0;i < n;i++){
        printf("%d\n", A[i]);
    }
    
    return 0;
}

------------> realloc()

#include <stdio.h>
#include <stdlib.h>

int main(){
    int n,*A,*B;
    printf("No.of elements: ");
    scanf("%d", &n);
    
    A = (int *)malloc(n * sizeof(int)); //malloc syntax
    
    for(int i = 0;i < n;i++){
        A[i] = i;
    }
    // free(A);
    
    B = (int *)realloc(A ,2*n*sizeof(int)); //realloc syntax
    
    printf("preveous block address: %p & new block address: %p", A ,B);
    
    // for(int i = n;i < 2*n;i++){
    //     B[i] = i;
    // }
    
    for(int i = n;i < 2*n;i++){
        printf("\n%d enter element: ", i);
        scanf("%d", &B[i]);
    }
    
    for(int i = 0;i < 2*n;i++){
        printf("%d\n", B[i]);
    }
    
    return 0;
}